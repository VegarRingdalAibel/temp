(function(){"use strict";const Li=Symbol("Comlink.proxy"),Ee=Symbol("Comlink.endpoint"),Ce=Symbol("Comlink.releaseProxy"),ui=Symbol("Comlink.thrown"),Ui=f=>typeof f=="object"&&f!==null||typeof f=="function",Be={canHandle:f=>Ui(f)&&f[Li],serialize(f){const{port1:t,port2:i}=new MessageChannel;return di(f,t),[i,[i]]},deserialize(f){return f.start(),Re(f)}},ke={canHandle:f=>Ui(f)&&ui in f,serialize({value:f}){let t;return f instanceof Error?t={isError:!0,value:{message:f.message,name:f.name,stack:f.stack}}:t={isError:!1,value:f},[t,[]]},deserialize(f){throw f.isError?Object.assign(new Error(f.value.message),f.value):f.value}},Hi=new Map([["proxy",Be],["throw",ke]]);function di(f,t=self){t.addEventListener("message",function i(e){if(!e||!e.data)return;const{id:s,type:n,path:r}=Object.assign({path:[]},e.data),h=(e.data.argumentList||[]).map(ct);let a;try{const o=r.slice(0,-1).reduce((c,u)=>c[u],f),l=r.reduce((c,u)=>c[u],f);switch(n){case"GET":a=l;break;case"SET":o[r.slice(-1)[0]]=ct(e.data.value),a=!0;break;case"APPLY":a=l.apply(o,h);break;case"CONSTRUCT":{const c=new l(...h);a=ve(c)}break;case"ENDPOINT":{const{port1:c,port2:u}=new MessageChannel;di(f,u),a=Oe(c,[c])}break;case"RELEASE":a=void 0;break;default:return}}catch(o){a={value:o,[ui]:0}}Promise.resolve(a).catch(o=>({value:o,[ui]:0})).then(o=>{const[l,c]=mi(o);t.postMessage(Object.assign(Object.assign({},l),{id:s}),c),n==="RELEASE"&&(t.removeEventListener("message",i),Xi(t))})}),t.start&&t.start()}function Te(f){return f.constructor.name==="MessagePort"}function Xi(f){Te(f)&&f.close()}function Re(f,t){return fi(f,[],t)}function Dt(f){if(f)throw new Error("Proxy has been released and is not useable")}function fi(f,t=[],i=function(){}){let e=!1;const s=new Proxy(i,{get(n,r){if(Dt(e),r===Ce)return()=>yt(f,{type:"RELEASE",path:t.map(h=>h.toString())}).then(()=>{Xi(f),e=!0});if(r==="then"){if(t.length===0)return{then:()=>s};const h=yt(f,{type:"GET",path:t.map(a=>a.toString())}).then(ct);return h.then.bind(h)}return fi(f,[...t,r])},set(n,r,h){Dt(e);const[a,o]=mi(h);return yt(f,{type:"SET",path:[...t,r].map(l=>l.toString()),value:a},o).then(ct)},apply(n,r,h){Dt(e);const a=t[t.length-1];if(a===Ee)return yt(f,{type:"ENDPOINT"}).then(ct);if(a==="bind")return fi(f,t.slice(0,-1));const[o,l]=Yi(h);return yt(f,{type:"APPLY",path:t.map(c=>c.toString()),argumentList:o},l).then(ct)},construct(n,r){Dt(e);const[h,a]=Yi(r);return yt(f,{type:"CONSTRUCT",path:t.map(o=>o.toString()),argumentList:h},a).then(ct)}});return s}function Ie(f){return Array.prototype.concat.apply([],f)}function Yi(f){const t=f.map(mi);return[t.map(i=>i[0]),Ie(t.map(i=>i[1]))]}const Zi=new WeakMap;function Oe(f,t){return Zi.set(f,t),f}function ve(f){return Object.assign(f,{[Li]:!0})}function mi(f){for(const[t,i]of Hi)if(i.canHandle(f)){const[e,s]=i.serialize(f);return[{type:"HANDLER",name:t,value:e},s]}return[{type:"RAW",value:f},Zi.get(f)||[]]}function ct(f){switch(f.type){case"HANDLER":return Hi.get(f.name).deserialize(f.value);case"RAW":return f.value}}function yt(f,t,i){return new Promise(e=>{const s=De();f.addEventListener("message",function n(r){!r.data||!r.data.id||r.data.id!==s||(f.removeEventListener("message",n),e(r.data))}),f.start&&f.start(),f.postMessage(Object.assign({id:s},t),i)})}function De(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Gi="143",$i=0,Ne=1,Pe=2,We=1,Ji=1,je=100,Ve=204,qe=205,Le=3,Ue=0,Qi=300,Ki=1e3,Nt=1001,te=1002,He=1006,Xe=1008,Ye=1009,Ze=1023,Ge=3e3,X="srgb",ut="srgb-linear",pi=7680,$e=519,ie=35044;class Pt{addEventListener(t,i){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[t]===void 0&&(e[t]=[]),e[t].indexOf(i)===-1&&e[t].push(i)}hasEventListener(t,i){if(this._listeners===void 0)return!1;const e=this._listeners;return e[t]!==void 0&&e[t].indexOf(i)!==-1}removeEventListener(t,i){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(i);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const s=e.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const k=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],yi=Math.PI/180,ee=180/Math.PI;function Et(){const f=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(k[f&255]+k[f>>8&255]+k[f>>16&255]+k[f>>24&255]+"-"+k[t&255]+k[t>>8&255]+"-"+k[t>>16&15|64]+k[t>>24&255]+"-"+k[i&63|128]+k[i>>8&255]+"-"+k[i>>16&255]+k[i>>24&255]+k[e&255]+k[e>>8&255]+k[e>>16&255]+k[e>>24&255]).toLowerCase()}function N(f,t,i){return Math.max(t,Math.min(i,f))}function Je(f,t){return(f%t+t)%t}function xi(f,t,i){return(1-i)*f+i*t}class O{constructor(t=0,i=0){O.prototype.isVector2=!0,this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,e=this.y,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6],this.y=s[1]*i+s[4]*e+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y;return i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const e=Math.cos(i),s=Math.sin(i),n=this.x-t.x,r=this.y-t.y;return this.x=n*e-r*s+t.x,this.y=n*s+r*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ct{constructor(){Ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,i,e,s,n,r,h,a,o){const l=this.elements;return l[0]=t,l[1]=s,l[2]=h,l[3]=i,l[4]=n,l[5]=a,l[6]=e,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],this}extractBasis(t,i,e){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],h=e[3],a=e[6],o=e[1],l=e[4],c=e[7],u=e[2],d=e[5],m=e[8],p=s[0],g=s[3],x=s[6],w=s[1],z=s[4],_=s[7],b=s[2],A=s[5],M=s[8];return n[0]=r*p+h*w+a*b,n[3]=r*g+h*z+a*A,n[6]=r*x+h*_+a*M,n[1]=o*p+l*w+c*b,n[4]=o*g+l*z+c*A,n[7]=o*x+l*_+c*M,n[2]=u*p+d*w+m*b,n[5]=u*g+d*z+m*A,n[8]=u*x+d*_+m*M,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return i*r*l-i*h*o-e*n*l+e*h*a+s*n*o-s*r*a}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=l*r-h*o,u=h*a-l*n,d=o*n-r*a,m=i*c+e*u+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/m;return t[0]=c*p,t[1]=(s*o-l*e)*p,t[2]=(h*e-s*r)*p,t[3]=u*p,t[4]=(l*i-s*a)*p,t[5]=(s*n-h*i)*p,t[6]=d*p,t[7]=(e*a-o*i)*p,t[8]=(r*i-e*n)*p,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,e,s,n,r,h){const a=Math.cos(n),o=Math.sin(n);return this.set(e*a,e*o,-e*(a*r+o*h)+r+t,-s*o,s*a,-s*(-o*r+a*h)+h+i,0,0,1),this}scale(t,i){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=i,e[4]*=i,e[7]*=i,this}rotate(t){const i=Math.cos(t),e=Math.sin(t),s=this.elements,n=s[0],r=s[3],h=s[6],a=s[1],o=s[4],l=s[7];return s[0]=i*n+e*a,s[3]=i*r+e*o,s[6]=i*h+e*l,s[1]=-e*n+i*a,s[4]=-e*r+i*o,s[7]=-e*h+i*l,this}translate(t,i){const e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=i*e[2],e[4]+=i*e[5],e[7]+=i*e[8],this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<9;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<9;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function Qe(f){for(let t=f.length-1;t>=0;--t)if(f[t]>65535)return!0;return!1}function se(f){return document.createElementNS("http://www.w3.org/1999/xhtml",f)}function dt(f){return f<.04045?f*.0773993808:Math.pow(f*.9478672986+.0521327014,2.4)}function Wt(f){return f<.0031308?f*12.92:1.055*Math.pow(f,.41666)-.055}const gi={[X]:{[ut]:dt},[ut]:{[X]:Wt}},q={legacyMode:!0,get workingColorSpace(){return ut},set workingColorSpace(f){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(f,t,i){if(this.legacyMode||t===i||!t||!i)return f;if(gi[t]&&gi[t][i]!==void 0){const e=gi[t][i];return f.r=e(f.r),f.g=e(f.g),f.b=e(f.b),f}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(f,t){return this.convert(f,this.workingColorSpace,t)},toWorkingColorSpace:function(f,t){return this.convert(f,t,this.workingColorSpace)}},ne={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},E={r:0,g:0,b:0},L={h:0,s:0,l:0},jt={h:0,s:0,l:0};function bi(f,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?f+(t-f)*6*i:i<1/2?t:i<2/3?f+(t-f)*6*(2/3-i):f}function Vt(f,t){return t.r=f.r,t.g=f.g,t.b=f.b,t}class Mi{constructor(t,i,e){return this.isColor=!0,this.r=1,this.g=1,this.b=1,i===void 0&&e===void 0?this.set(t):this.setRGB(t,i,e)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,i=X){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,q.toWorkingColorSpace(this,i),this}setRGB(t,i,e,s=ut){return this.r=t,this.g=i,this.b=e,q.toWorkingColorSpace(this,s),this}setHSL(t,i,e,s=ut){if(t=Je(t,1),i=N(i,0,1),e=N(e,0,1),i===0)this.r=this.g=this.b=e;else{const n=e<=.5?e*(1+i):e+i-e*i,r=2*e-n;this.r=bi(r,n,t+1/3),this.g=bi(r,n,t),this.b=bi(r,n,t-1/3)}return q.toWorkingColorSpace(this,s),this}setStyle(t,i=X){function e(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],h=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,q.toWorkingColorSpace(this,i),e(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,q.toWorkingColorSpace(this,i),e(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h)){const a=parseFloat(n[1])/360,o=parseInt(n[2],10)/100,l=parseInt(n[3],10)/100;return e(n[4]),this.setHSL(a,o,l,i)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,q.toWorkingColorSpace(this,i),this;if(r===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,q.toWorkingColorSpace(this,i),this}return t&&t.length>0?this.setColorName(t,i):this}setColorName(t,i=X){const e=ne[t.toLowerCase()];return e!==void 0?this.setHex(e,i):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=dt(t.r),this.g=dt(t.g),this.b=dt(t.b),this}copyLinearToSRGB(t){return this.r=Wt(t.r),this.g=Wt(t.g),this.b=Wt(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=X){return q.fromWorkingColorSpace(Vt(this,E),t),N(E.r*255,0,255)<<16^N(E.g*255,0,255)<<8^N(E.b*255,0,255)<<0}getHexString(t=X){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,i=ut){q.fromWorkingColorSpace(Vt(this,E),i);const e=E.r,s=E.g,n=E.b,r=Math.max(e,s,n),h=Math.min(e,s,n);let a,o;const l=(h+r)/2;if(h===r)a=0,o=0;else{const c=r-h;switch(o=l<=.5?c/(r+h):c/(2-r-h),r){case e:a=(s-n)/c+(s<n?6:0);break;case s:a=(n-e)/c+2;break;case n:a=(e-s)/c+4;break}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,i=ut){return q.fromWorkingColorSpace(Vt(this,E),i),t.r=E.r,t.g=E.g,t.b=E.b,t}getStyle(t=X){return q.fromWorkingColorSpace(Vt(this,E),t),t!==X?`color(${t} ${E.r} ${E.g} ${E.b})`:`rgb(${E.r*255|0},${E.g*255|0},${E.b*255|0})`}offsetHSL(t,i,e){return this.getHSL(L),L.h+=t,L.s+=i,L.l+=e,this.setHSL(L.h,L.s,L.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,i){return this.r=t.r+i.r,this.g=t.g+i.g,this.b=t.b+i.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,i){return this.r+=(t.r-this.r)*i,this.g+=(t.g-this.g)*i,this.b+=(t.b-this.b)*i,this}lerpColors(t,i,e){return this.r=t.r+(i.r-t.r)*e,this.g=t.g+(i.g-t.g)*e,this.b=t.b+(i.b-t.b)*e,this}lerpHSL(t,i){this.getHSL(L),t.getHSL(jt);const e=xi(L.h,jt.h,i),s=xi(L.s,jt.s,i),n=xi(L.l,jt.l,i);return this.setHSL(e,s,n),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,i=0){return this.r=t[i],this.g=t[i+1],this.b=t[i+2],this}toArray(t=[],i=0){return t[i]=this.r,t[i+1]=this.g,t[i+2]=this.b,t}fromBufferAttribute(t,i){return this.r=t.getX(i),this.g=t.getY(i),this.b=t.getZ(i),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Mi.NAMES=ne;let xt;class Ke{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{xt===void 0&&(xt=se("canvas")),xt.width=t.width,xt.height=t.height;const e=xt.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=xt}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const i=se("canvas");i.width=t.width,i.height=t.height;const e=i.getContext("2d");e.drawImage(t,0,0,t.width,t.height);const s=e.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=dt(n[r]/255)*255;return e.putImageData(s,0,0),i}else if(t.data){const i=t.data.slice(0);for(let e=0;e<i.length;e++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[e]=Math.floor(dt(i[e]/255)*255):i[e]=dt(i[e]);return{data:i,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class ts{constructor(t=null){this.isSource=!0,this.uuid=Et(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const e={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,h=s.length;r<h;r++)s[r].isDataTexture?n.push(wi(s[r].image)):n.push(wi(s[r]))}else n=wi(s);e.url=n}return i||(t.images[this.uuid]=e),e}}function wi(f){return typeof HTMLImageElement<"u"&&f instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&f instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&f instanceof ImageBitmap?Ke.getDataURL(f):f.data?{data:Array.from(f.data),width:f.width,height:f.height,type:f.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let is=0;class Bt extends Pt{constructor(t=Bt.DEFAULT_IMAGE,i=Bt.DEFAULT_MAPPING,e=Nt,s=Nt,n=He,r=Xe,h=Ze,a=Ye,o=1,l=Ge){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:is++}),this.uuid=Et(),this.name="",this.source=new ts(t),this.mipmaps=[],this.mapping=i,this.wrapS=e,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=o,this.format=h,this.internalFormat=null,this.type=a,this.offset=new O(0,0),this.repeat=new O(1,1),this.center=new O(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(e.userData=this.userData),i||(t.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Qi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ki:t.x=t.x-Math.floor(t.x);break;case Nt:t.x=t.x<0?0:1;break;case te:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ki:t.y=t.y-Math.floor(t.y);break;case Nt:t.y=t.y<0?0:1;break;case te:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Bt.DEFAULT_IMAGE=null,Bt.DEFAULT_MAPPING=Qi;class _i{constructor(t=0,i=0,e=0,s=1){_i.prototype.isVector4=!0,this.x=t,this.y=i,this.z=e,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,i,e,s){return this.x=t,this.y=i,this.z=e,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;case 3:this.w=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this.w=t.w+i.w,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this.w+=t.w*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this.w=t.w-i.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=this.w,r=t.elements;return this.x=r[0]*i+r[4]*e+r[8]*s+r[12]*n,this.y=r[1]*i+r[5]*e+r[9]*s+r[13]*n,this.z=r[2]*i+r[6]*e+r[10]*s+r[14]*n,this.w=r[3]*i+r[7]*e+r[11]*s+r[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const i=Math.sqrt(1-t.w*t.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/i,this.y=t.y/i,this.z=t.z/i),this}setAxisAngleFromRotationMatrix(t){let i,e,s,n;const a=t.elements,o=a[0],l=a[4],c=a[8],u=a[1],d=a[5],m=a[9],p=a[2],g=a[6],x=a[10];if(Math.abs(l-u)<.01&&Math.abs(c-p)<.01&&Math.abs(m-g)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+p)<.1&&Math.abs(m+g)<.1&&Math.abs(o+d+x-3)<.1)return this.set(1,0,0,0),this;i=Math.PI;const z=(o+1)/2,_=(d+1)/2,b=(x+1)/2,A=(l+u)/4,M=(c+p)/4,D=(m+g)/4;return z>_&&z>b?z<.01?(e=0,s=.707106781,n=.707106781):(e=Math.sqrt(z),s=A/e,n=M/e):_>b?_<.01?(e=.707106781,s=0,n=.707106781):(s=Math.sqrt(_),e=A/s,n=D/s):b<.01?(e=.707106781,s=.707106781,n=0):(n=Math.sqrt(b),e=M/n,s=D/n),this.set(e,s,n,i),this}let w=Math.sqrt((g-m)*(g-m)+(c-p)*(c-p)+(u-l)*(u-l));return Math.abs(w)<.001&&(w=1),this.x=(g-m)/w,this.y=(c-p)/w,this.z=(u-l)/w,this.w=Math.acos((o+d+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this.w=Math.max(t.w,Math.min(i.w,this.w)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this.w=Math.max(t,Math.min(i,this.w)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this.w+=(t.w-this.w)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this.w=t.w+(i.w-t.w)*e,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this.w=t.getW(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class kt{constructor(t=0,i=0,e=0,s=1){this.isQuaternion=!0,this._x=t,this._y=i,this._z=e,this._w=s}static slerpFlat(t,i,e,s,n,r,h){let a=e[s+0],o=e[s+1],l=e[s+2],c=e[s+3];const u=n[r+0],d=n[r+1],m=n[r+2],p=n[r+3];if(h===0){t[i+0]=a,t[i+1]=o,t[i+2]=l,t[i+3]=c;return}if(h===1){t[i+0]=u,t[i+1]=d,t[i+2]=m,t[i+3]=p;return}if(c!==p||a!==u||o!==d||l!==m){let g=1-h;const x=a*u+o*d+l*m+c*p,w=x>=0?1:-1,z=1-x*x;if(z>Number.EPSILON){const b=Math.sqrt(z),A=Math.atan2(b,x*w);g=Math.sin(g*A)/b,h=Math.sin(h*A)/b}const _=h*w;if(a=a*g+u*_,o=o*g+d*_,l=l*g+m*_,c=c*g+p*_,g===1-h){const b=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=b,o*=b,l*=b,c*=b}}t[i]=a,t[i+1]=o,t[i+2]=l,t[i+3]=c}static multiplyQuaternionsFlat(t,i,e,s,n,r){const h=e[s],a=e[s+1],o=e[s+2],l=e[s+3],c=n[r],u=n[r+1],d=n[r+2],m=n[r+3];return t[i]=h*m+l*c+a*d-o*u,t[i+1]=a*m+l*u+o*c-h*d,t[i+2]=o*m+l*d+h*u-a*c,t[i+3]=l*m-h*c-a*u-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,e,s){return this._x=t,this._y=i,this._z=e,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const e=t._x,s=t._y,n=t._z,r=t._order,h=Math.cos,a=Math.sin,o=h(e/2),l=h(s/2),c=h(n/2),u=a(e/2),d=a(s/2),m=a(n/2);switch(r){case"XYZ":this._x=u*l*c+o*d*m,this._y=o*d*c-u*l*m,this._z=o*l*m+u*d*c,this._w=o*l*c-u*d*m;break;case"YXZ":this._x=u*l*c+o*d*m,this._y=o*d*c-u*l*m,this._z=o*l*m-u*d*c,this._w=o*l*c+u*d*m;break;case"ZXY":this._x=u*l*c-o*d*m,this._y=o*d*c+u*l*m,this._z=o*l*m+u*d*c,this._w=o*l*c-u*d*m;break;case"ZYX":this._x=u*l*c-o*d*m,this._y=o*d*c+u*l*m,this._z=o*l*m-u*d*c,this._w=o*l*c+u*d*m;break;case"YZX":this._x=u*l*c+o*d*m,this._y=o*d*c+u*l*m,this._z=o*l*m-u*d*c,this._w=o*l*c-u*d*m;break;case"XZY":this._x=u*l*c-o*d*m,this._y=o*d*c-u*l*m,this._z=o*l*m+u*d*c,this._w=o*l*c+u*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return i!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const e=i/2,s=Math.sin(e);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,e=i[0],s=i[4],n=i[8],r=i[1],h=i[5],a=i[9],o=i[2],l=i[6],c=i[10],u=e+h+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(l-a)*d,this._y=(n-o)*d,this._z=(r-s)*d}else if(e>h&&e>c){const d=2*Math.sqrt(1+e-h-c);this._w=(l-a)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+o)/d}else if(h>c){const d=2*Math.sqrt(1+h-e-c);this._w=(n-o)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(a+l)/d}else{const d=2*Math.sqrt(1+c-e-h);this._w=(r-s)/d,this._x=(n+o)/d,this._y=(a+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let e=t.dot(i)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(N(this.dot(t),-1,1)))}rotateTowards(t,i){const e=this.angleTo(t);if(e===0)return this;const s=Math.min(1,i/e);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const e=t._x,s=t._y,n=t._z,r=t._w,h=i._x,a=i._y,o=i._z,l=i._w;return this._x=e*l+r*h+s*o-n*a,this._y=s*l+r*a+n*h-e*o,this._z=n*l+r*o+e*a-s*h,this._w=r*l-e*h-s*a-n*o,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);const e=this._x,s=this._y,n=this._z,r=this._w;let h=r*t._w+e*t._x+s*t._y+n*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=r,this._x=e,this._y=s,this._z=n,this;const a=1-h*h;if(a<=Number.EPSILON){const d=1-i;return this._w=d*r+i*this._w,this._x=d*e+i*this._x,this._y=d*s+i*this._y,this._z=d*n+i*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),c=Math.sin((1-i)*l)/o,u=Math.sin(i*l)/o;return this._w=r*c+this._w*u,this._x=e*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,i,e){return this.copy(t).slerp(i,e)}random(){const t=Math.random(),i=Math.sqrt(1-t),e=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(i*Math.cos(s),e*Math.sin(n),e*Math.cos(n),i*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class y{constructor(t=0,i=0,e=0){y.prototype.isVector3=!0,this.x=t,this.y=i,this.z=e}set(t,i,e){return e===void 0&&(e=this.z),this.x=t,this.y=i,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return this.applyQuaternion(re.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(re.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6]*s,this.y=n[1]*i+n[4]*e+n[7]*s,this.z=n[2]*i+n[5]*e+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=t.elements,r=1/(n[3]*i+n[7]*e+n[11]*s+n[15]);return this.x=(n[0]*i+n[4]*e+n[8]*s+n[12])*r,this.y=(n[1]*i+n[5]*e+n[9]*s+n[13])*r,this.z=(n[2]*i+n[6]*e+n[10]*s+n[14])*r,this}applyQuaternion(t){const i=this.x,e=this.y,s=this.z,n=t.x,r=t.y,h=t.z,a=t.w,o=a*i+r*s-h*e,l=a*e+h*i-n*s,c=a*s+n*e-r*i,u=-n*i-r*e-h*s;return this.x=o*a+u*-n+l*-h-c*-r,this.y=l*a+u*-r+c*-n-o*-h,this.z=c*a+u*-h+o*-r-l*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[4]*e+n[8]*s,this.y=n[1]*i+n[5]*e+n[9]*s,this.z=n[2]*i+n[6]*e+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,i){const e=t.x,s=t.y,n=t.z,r=i.x,h=i.y,a=i.z;return this.x=s*a-n*h,this.y=n*r-e*a,this.z=e*h-s*r,this}projectOnVector(t){const i=t.lengthSq();if(i===0)return this.set(0,0,0);const e=t.dot(this)/i;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return zi.copy(this).projectOnVector(t),this.sub(zi)}reflect(t){return this.sub(zi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(N(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y,s=this.z-t.z;return i*i+e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,e){const s=Math.sin(i)*t;return this.x=s*Math.sin(e),this.y=Math.cos(i)*t,this.z=s*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,e){return this.x=t*Math.sin(i),this.y=e,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=s,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,i=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(i),this.y=e*Math.sin(i),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zi=new y,re=new kt;class Tt{constructor(t=new y(1/0,1/0,1/0),i=new y(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){let i=1/0,e=1/0,s=1/0,n=-1/0,r=-1/0,h=-1/0;for(let a=0,o=t.length;a<o;a+=3){const l=t[a],c=t[a+1],u=t[a+2];l<i&&(i=l),c<e&&(e=c),u<s&&(s=u),l>n&&(n=l),c>r&&(r=c),u>h&&(h=u)}return this.min.set(i,e,s),this.max.set(n,r,h),this}setFromBufferAttribute(t){let i=1/0,e=1/0,s=1/0,n=-1/0,r=-1/0,h=-1/0;for(let a=0,o=t.count;a<o;a++){const l=t.getX(a),c=t.getY(a),u=t.getZ(a);l<i&&(i=l),c<e&&(e=c),u<s&&(s=u),l>n&&(n=l),c>r&&(r=c),u>h&&(h=u)}return this.min.set(i,e,s),this.max.set(n,r,h),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const e=ft.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){t.updateWorldMatrix(!1,!1);const e=t.geometry;if(e!==void 0)if(i&&e.attributes!=null&&e.attributes.position!==void 0){const n=e.attributes.position;for(let r=0,h=n.count;r<h;r++)ft.fromBufferAttribute(n,r).applyMatrix4(t.matrixWorld),this.expandByPoint(ft)}else e.boundingBox===null&&e.computeBoundingBox(),Si.copy(e.boundingBox),Si.applyMatrix4(t.matrixWorld),this.union(Si);const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],i);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ft),ft.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,e;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Rt),qt.subVectors(this.max,Rt),gt.subVectors(t.a,Rt),bt.subVectors(t.b,Rt),Mt.subVectors(t.c,Rt),tt.subVectors(bt,gt),it.subVectors(Mt,bt),mt.subVectors(gt,Mt);let i=[0,-tt.z,tt.y,0,-it.z,it.y,0,-mt.z,mt.y,tt.z,0,-tt.x,it.z,0,-it.x,mt.z,0,-mt.x,-tt.y,tt.x,0,-it.y,it.x,0,-mt.y,mt.x,0];return!Ai(i,gt,bt,Mt,qt)||(i=[1,0,0,0,1,0,0,0,1],!Ai(i,gt,bt,Mt,qt))?!1:(Lt.crossVectors(tt,it),i=[Lt.x,Lt.y,Lt.z],Ai(i,gt,bt,Mt,qt))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ft.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(ft).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Y[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Y[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Y[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Y[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Y[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Y[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Y[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Y[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Y),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Y=[new y,new y,new y,new y,new y,new y,new y,new y],ft=new y,Si=new Tt,gt=new y,bt=new y,Mt=new y,tt=new y,it=new y,mt=new y,Rt=new y,qt=new y,Lt=new y,pt=new y;function Ai(f,t,i,e,s){for(let n=0,r=f.length-3;n<=r;n+=3){pt.fromArray(f,n);const h=s.x*Math.abs(pt.x)+s.y*Math.abs(pt.y)+s.z*Math.abs(pt.z),a=t.dot(pt),o=i.dot(pt),l=e.dot(pt);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>h)return!1}return!0}const es=new Tt,he=new y,Ut=new y,Fi=new y;class ae{constructor(t=new y,i=-1){this.center=t,this.radius=i}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const e=this.center;i!==void 0?e.copy(i):es.setFromPoints(t).getCenter(e);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,e.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Fi.subVectors(t,this.center);const i=Fi.lengthSq();if(i>this.radius*this.radius){const e=Math.sqrt(i),s=(e-this.radius)*.5;this.center.add(Fi.multiplyScalar(s/e)),this.radius+=s}return this}union(t){return this.center.equals(t.center)===!0?Ut.set(0,0,1).multiplyScalar(t.radius):Ut.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(he.copy(t.center).add(Ut)),this.expandByPoint(he.copy(t.center).sub(Ut)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Z=new y,Ei=new y,Ht=new y,et=new y,Ci=new y,Xt=new y,Bi=new y;class oe{constructor(t=new y,i=new y(0,0,-1)){this.origin=t,this.direction=i}set(t,i){return this.origin.copy(t),this.direction.copy(i),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,i){return i.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Z)),this}closestPointToPoint(t,i){i.subVectors(t,this.origin);const e=i.dot(this.direction);return e<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const i=Z.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(Z.copy(this.direction).multiplyScalar(i).add(this.origin),Z.distanceToSquared(t))}distanceSqToSegment(t,i,e,s){Ei.copy(t).add(i).multiplyScalar(.5),Ht.copy(i).sub(t).normalize(),et.copy(this.origin).sub(Ei);const n=t.distanceTo(i)*.5,r=-this.direction.dot(Ht),h=et.dot(this.direction),a=-et.dot(Ht),o=et.lengthSq(),l=Math.abs(1-r*r);let c,u,d,m;if(l>0)if(c=r*a-h,u=r*h-a,m=n*l,c>=0)if(u>=-m)if(u<=m){const p=1/l;c*=p,u*=p,d=c*(c+r*u+2*h)+u*(r*c+u+2*a)+o}else u=n,c=Math.max(0,-(r*u+h)),d=-c*c+u*(u+2*a)+o;else u=-n,c=Math.max(0,-(r*u+h)),d=-c*c+u*(u+2*a)+o;else u<=-m?(c=Math.max(0,-(-r*n+h)),u=c>0?-n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+o):u<=m?(c=0,u=Math.min(Math.max(-n,-a),n),d=u*(u+2*a)+o):(c=Math.max(0,-(r*n+h)),u=c>0?n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+o);else u=r>0?-n:n,c=Math.max(0,-(r*u+h)),d=-c*c+u*(u+2*a)+o;return e&&e.copy(this.direction).multiplyScalar(c).add(this.origin),s&&s.copy(Ht).multiplyScalar(u).add(Ei),d}intersectSphere(t,i){Z.subVectors(t.center,this.origin);const e=Z.dot(this.direction),s=Z.dot(Z)-e*e,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),h=e-r,a=e+r;return h<0&&a<0?null:h<0?this.at(a,i):this.at(h,i)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const i=t.normal.dot(this.direction);if(i===0)return t.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(t.normal)+t.constant)/i;return e>=0?e:null}intersectPlane(t,i){const e=this.distanceToPlane(t);return e===null?null:this.at(e,i)}intersectsPlane(t){const i=t.distanceToPoint(this.origin);return i===0||t.normal.dot(this.direction)*i<0}intersectBox(t,i){let e,s,n,r,h,a;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return o>=0?(e=(t.min.x-u.x)*o,s=(t.max.x-u.x)*o):(e=(t.max.x-u.x)*o,s=(t.min.x-u.x)*o),l>=0?(n=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),e>r||n>s||((n>e||e!==e)&&(e=n),(r<s||s!==s)&&(s=r),c>=0?(h=(t.min.z-u.z)*c,a=(t.max.z-u.z)*c):(h=(t.max.z-u.z)*c,a=(t.min.z-u.z)*c),e>a||h>s)||((h>e||e!==e)&&(e=h),(a<s||s!==s)&&(s=a),s<0)?null:this.at(e>=0?e:s,i)}intersectsBox(t){return this.intersectBox(t,Z)!==null}intersectTriangle(t,i,e,s,n){Ci.subVectors(i,t),Xt.subVectors(e,t),Bi.crossVectors(Ci,Xt);let r=this.direction.dot(Bi),h;if(r>0){if(s)return null;h=1}else if(r<0)h=-1,r=-r;else return null;et.subVectors(this.origin,t);const a=h*this.direction.dot(Xt.crossVectors(et,Xt));if(a<0)return null;const o=h*this.direction.dot(Ci.cross(et));if(o<0||a+o>r)return null;const l=-h*et.dot(Bi);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class v{constructor(){v.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,i,e,s,n,r,h,a,o,l,c,u,d,m,p,g){const x=this.elements;return x[0]=t,x[4]=i,x[8]=e,x[12]=s,x[1]=n,x[5]=r,x[9]=h,x[13]=a,x[2]=o,x[6]=l,x[10]=c,x[14]=u,x[3]=d,x[7]=m,x[11]=p,x[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new v().fromArray(this.elements)}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],this}copyPosition(t){const i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}setFromMatrix3(t){const i=t.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,e=t.elements,s=1/wt.setFromMatrixColumn(t,0).length(),n=1/wt.setFromMatrixColumn(t,1).length(),r=1/wt.setFromMatrixColumn(t,2).length();return i[0]=e[0]*s,i[1]=e[1]*s,i[2]=e[2]*s,i[3]=0,i[4]=e[4]*n,i[5]=e[5]*n,i[6]=e[6]*n,i[7]=0,i[8]=e[8]*r,i[9]=e[9]*r,i[10]=e[10]*r,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){const i=this.elements,e=t.x,s=t.y,n=t.z,r=Math.cos(e),h=Math.sin(e),a=Math.cos(s),o=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=r*l,d=r*c,m=h*l,p=h*c;i[0]=a*l,i[4]=-a*c,i[8]=o,i[1]=d+m*o,i[5]=u-p*o,i[9]=-h*a,i[2]=p-u*o,i[6]=m+d*o,i[10]=r*a}else if(t.order==="YXZ"){const u=a*l,d=a*c,m=o*l,p=o*c;i[0]=u+p*h,i[4]=m*h-d,i[8]=r*o,i[1]=r*c,i[5]=r*l,i[9]=-h,i[2]=d*h-m,i[6]=p+u*h,i[10]=r*a}else if(t.order==="ZXY"){const u=a*l,d=a*c,m=o*l,p=o*c;i[0]=u-p*h,i[4]=-r*c,i[8]=m+d*h,i[1]=d+m*h,i[5]=r*l,i[9]=p-u*h,i[2]=-r*o,i[6]=h,i[10]=r*a}else if(t.order==="ZYX"){const u=r*l,d=r*c,m=h*l,p=h*c;i[0]=a*l,i[4]=m*o-d,i[8]=u*o+p,i[1]=a*c,i[5]=p*o+u,i[9]=d*o-m,i[2]=-o,i[6]=h*a,i[10]=r*a}else if(t.order==="YZX"){const u=r*a,d=r*o,m=h*a,p=h*o;i[0]=a*l,i[4]=p-u*c,i[8]=m*c+d,i[1]=c,i[5]=r*l,i[9]=-h*l,i[2]=-o*l,i[6]=d*c+m,i[10]=u-p*c}else if(t.order==="XZY"){const u=r*a,d=r*o,m=h*a,p=h*o;i[0]=a*l,i[4]=-c,i[8]=o*l,i[1]=u*c+p,i[5]=r*l,i[9]=d*c-m,i[2]=m*c-d,i[6]=h*l,i[10]=p*c+u}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ss,t,ns)}lookAt(t,i,e){const s=this.elements;return P.subVectors(t,i),P.lengthSq()===0&&(P.z=1),P.normalize(),st.crossVectors(e,P),st.lengthSq()===0&&(Math.abs(e.z)===1?P.x+=1e-4:P.z+=1e-4,P.normalize(),st.crossVectors(e,P)),st.normalize(),Yt.crossVectors(P,st),s[0]=st.x,s[4]=Yt.x,s[8]=P.x,s[1]=st.y,s[5]=Yt.y,s[9]=P.y,s[2]=st.z,s[6]=Yt.z,s[10]=P.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],h=e[4],a=e[8],o=e[12],l=e[1],c=e[5],u=e[9],d=e[13],m=e[2],p=e[6],g=e[10],x=e[14],w=e[3],z=e[7],_=e[11],b=e[15],A=s[0],M=s[4],D=s[8],V=s[12],S=s[1],B=s[5],T=s[9],R=s[13],ot=s[2],I=s[6],lt=s[10],hi=s[14],ai=s[3],oi=s[7],li=s[11],ci=s[15];return n[0]=r*A+h*S+a*ot+o*ai,n[4]=r*M+h*B+a*I+o*oi,n[8]=r*D+h*T+a*lt+o*li,n[12]=r*V+h*R+a*hi+o*ci,n[1]=l*A+c*S+u*ot+d*ai,n[5]=l*M+c*B+u*I+d*oi,n[9]=l*D+c*T+u*lt+d*li,n[13]=l*V+c*R+u*hi+d*ci,n[2]=m*A+p*S+g*ot+x*ai,n[6]=m*M+p*B+g*I+x*oi,n[10]=m*D+p*T+g*lt+x*li,n[14]=m*V+p*R+g*hi+x*ci,n[3]=w*A+z*S+_*ot+b*ai,n[7]=w*M+z*B+_*I+b*oi,n[11]=w*D+z*T+_*lt+b*li,n[15]=w*V+z*R+_*hi+b*ci,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[4],s=t[8],n=t[12],r=t[1],h=t[5],a=t[9],o=t[13],l=t[2],c=t[6],u=t[10],d=t[14],m=t[3],p=t[7],g=t[11],x=t[15];return m*(+n*a*c-s*o*c-n*h*u+e*o*u+s*h*d-e*a*d)+p*(+i*a*d-i*o*u+n*r*u-s*r*d+s*o*l-n*a*l)+g*(+i*o*c-i*h*d-n*r*c+e*r*d+n*h*l-e*o*l)+x*(-s*h*l-i*a*c+i*h*u+s*r*c-e*r*u+e*a*l)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,e){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=i,s[14]=e),this}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=t[9],u=t[10],d=t[11],m=t[12],p=t[13],g=t[14],x=t[15],w=c*g*o-p*u*o+p*a*d-h*g*d-c*a*x+h*u*x,z=m*u*o-l*g*o-m*a*d+r*g*d+l*a*x-r*u*x,_=l*p*o-m*c*o+m*h*d-r*p*d-l*h*x+r*c*x,b=m*c*a-l*p*a-m*h*u+r*p*u+l*h*g-r*c*g,A=i*w+e*z+s*_+n*b;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/A;return t[0]=w*M,t[1]=(p*u*n-c*g*n-p*s*d+e*g*d+c*s*x-e*u*x)*M,t[2]=(h*g*n-p*a*n+p*s*o-e*g*o-h*s*x+e*a*x)*M,t[3]=(c*a*n-h*u*n-c*s*o+e*u*o+h*s*d-e*a*d)*M,t[4]=z*M,t[5]=(l*g*n-m*u*n+m*s*d-i*g*d-l*s*x+i*u*x)*M,t[6]=(m*a*n-r*g*n-m*s*o+i*g*o+r*s*x-i*a*x)*M,t[7]=(r*u*n-l*a*n+l*s*o-i*u*o-r*s*d+i*a*d)*M,t[8]=_*M,t[9]=(m*c*n-l*p*n-m*e*d+i*p*d+l*e*x-i*c*x)*M,t[10]=(r*p*n-m*h*n+m*e*o-i*p*o-r*e*x+i*h*x)*M,t[11]=(l*h*n-r*c*n-l*e*o+i*c*o+r*e*d-i*h*d)*M,t[12]=b*M,t[13]=(l*p*s-m*c*s+m*e*u-i*p*u-l*e*g+i*c*g)*M,t[14]=(m*h*s-r*p*s-m*e*a+i*p*a+r*e*g-i*h*g)*M,t[15]=(r*c*s-l*h*s+l*e*a-i*c*a-r*e*u+i*h*u)*M,this}scale(t){const i=this.elements,e=t.x,s=t.y,n=t.z;return i[0]*=e,i[4]*=s,i[8]*=n,i[1]*=e,i[5]*=s,i[9]*=n,i[2]*=e,i[6]*=s,i[10]*=n,i[3]*=e,i[7]*=s,i[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,s))}makeTranslation(t,i,e){return this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const e=Math.cos(i),s=Math.sin(i),n=1-e,r=t.x,h=t.y,a=t.z,o=n*r,l=n*h;return this.set(o*r+e,o*h-s*a,o*a+s*h,0,o*h+s*a,l*h+e,l*a-s*r,0,o*a-s*h,l*a+s*r,n*a*a+e,0,0,0,0,1),this}makeScale(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,i,e,s,n,r){return this.set(1,e,n,0,t,1,r,0,i,s,1,0,0,0,0,1),this}compose(t,i,e){const s=this.elements,n=i._x,r=i._y,h=i._z,a=i._w,o=n+n,l=r+r,c=h+h,u=n*o,d=n*l,m=n*c,p=r*l,g=r*c,x=h*c,w=a*o,z=a*l,_=a*c,b=e.x,A=e.y,M=e.z;return s[0]=(1-(p+x))*b,s[1]=(d+_)*b,s[2]=(m-z)*b,s[3]=0,s[4]=(d-_)*A,s[5]=(1-(u+x))*A,s[6]=(g+w)*A,s[7]=0,s[8]=(m+z)*M,s[9]=(g-w)*M,s[10]=(1-(u+p))*M,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,i,e){const s=this.elements;let n=wt.set(s[0],s[1],s[2]).length();const r=wt.set(s[4],s[5],s[6]).length(),h=wt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],U.copy(this);const o=1/n,l=1/r,c=1/h;return U.elements[0]*=o,U.elements[1]*=o,U.elements[2]*=o,U.elements[4]*=l,U.elements[5]*=l,U.elements[6]*=l,U.elements[8]*=c,U.elements[9]*=c,U.elements[10]*=c,i.setFromRotationMatrix(U),e.x=n,e.y=r,e.z=h,this}makePerspective(t,i,e,s,n,r){const h=this.elements,a=2*n/(i-t),o=2*n/(e-s),l=(i+t)/(i-t),c=(e+s)/(e-s),u=-(r+n)/(r-n),d=-2*r*n/(r-n);return h[0]=a,h[4]=0,h[8]=l,h[12]=0,h[1]=0,h[5]=o,h[9]=c,h[13]=0,h[2]=0,h[6]=0,h[10]=u,h[14]=d,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,i,e,s,n,r){const h=this.elements,a=1/(i-t),o=1/(e-s),l=1/(r-n),c=(i+t)*a,u=(e+s)*o,d=(r+n)*l;return h[0]=2*a,h[4]=0,h[8]=0,h[12]=-c,h[1]=0,h[5]=2*o,h[9]=0,h[13]=-u,h[2]=0,h[6]=0,h[10]=-2*l,h[14]=-d,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<16;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<16;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t[i+9]=e[9],t[i+10]=e[10],t[i+11]=e[11],t[i+12]=e[12],t[i+13]=e[13],t[i+14]=e[14],t[i+15]=e[15],t}}const wt=new y,U=new v,ss=new y(0,0,0),ns=new y(1,1,1),st=new y,Yt=new y,P=new y,le=new v,ce=new kt;class It{constructor(t=0,i=0,e=0,s=It.DefaultOrder){this.isEuler=!0,this._x=t,this._y=i,this._z=e,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,e,s=this._order){return this._x=t,this._y=i,this._z=e,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,e=!0){const s=t.elements,n=s[0],r=s[4],h=s[8],a=s[1],o=s[5],l=s[9],c=s[2],u=s[6],d=s[10];switch(i){case"XYZ":this._y=Math.asin(N(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-N(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(h,d),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(N(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-N(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(N(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(h,d));break;case"XZY":this._z=Math.asin(-N(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(h,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,i,e){return le.makeRotationFromQuaternion(t),this.setFromRotationMatrix(le,i,e)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return ce.setFromEuler(this),this.setFromQuaternion(ce,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}It.DefaultOrder="XYZ",It.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ue{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let rs=0;const de=new y,_t=new kt,G=new v,Zt=new y,Ot=new y,hs=new y,as=new kt,fe=new y(1,0,0),me=new y(0,1,0),pe=new y(0,0,1),os={type:"added"},ye={type:"removed"};class $ extends Pt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:rs++}),this.uuid=Et(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$.DefaultUp.clone();const t=new y,i=new It,e=new kt,s=new y(1,1,1);function n(){e.setFromEuler(i,!1)}function r(){i.setFromQuaternion(e,void 0,!1)}i._onChange(n),e._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new v},normalMatrix:{value:new Ct}}),this.matrix=new v,this.matrixWorld=new v,this.matrixAutoUpdate=$.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ue,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return _t.setFromAxisAngle(t,i),this.quaternion.multiply(_t),this}rotateOnWorldAxis(t,i){return _t.setFromAxisAngle(t,i),this.quaternion.premultiply(_t),this}rotateX(t){return this.rotateOnAxis(fe,t)}rotateY(t){return this.rotateOnAxis(me,t)}rotateZ(t){return this.rotateOnAxis(pe,t)}translateOnAxis(t,i){return de.copy(t).applyQuaternion(this.quaternion),this.position.add(de.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(fe,t)}translateY(t){return this.translateOnAxis(me,t)}translateZ(t){return this.translateOnAxis(pe,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(G.copy(this.matrixWorld).invert())}lookAt(t,i,e){t.isVector3?Zt.copy(t):Zt.set(t,i,e);const s=this.parent;this.updateWorldMatrix(!0,!1),Ot.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?G.lookAt(Ot,Zt,this.up):G.lookAt(Zt,Ot,this.up),this.quaternion.setFromRotationMatrix(G),s&&(G.extractRotation(s.matrixWorld),_t.setFromRotationMatrix(G),this.quaternion.premultiply(_t.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(os)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const i=this.children.indexOf(t);return i!==-1&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(ye)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const i=this.children[t];i.parent=null,i.dispatchEvent(ye)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),G.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),G.multiply(t.parent.matrixWorld)),t.applyMatrix4(G),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let e=0,s=this.children.length;e<s;e++){const r=this.children[e].getObjectByProperty(t,i);if(r!==void 0)return r}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ot,t,hs),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ot,as,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverseVisible(t)}traverseAncestors(t){const i=this.parent;i!==null&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].updateMatrixWorld(t)}updateWorldMatrix(t,i){const e=this.parent;if(t===!0&&e!==null&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),i===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const i=t===void 0||typeof t=="string",e={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function n(h,a){return h[a.uuid]===void 0&&(h[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const h=this.geometry.parameters;if(h!==void 0&&h.shapes!==void 0){const a=h.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){const c=a[o];n(t.shapes,c)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const h=[];for(let a=0,o=this.material.length;a<o;a++)h.push(n(t.materials,this.material[a]));s.material=h}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let h=0;h<this.children.length;h++)s.children.push(this.children[h].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let h=0;h<this.animations.length;h++){const a=this.animations[h];s.animations.push(n(t.animations,a))}}if(i){const h=r(t.geometries),a=r(t.materials),o=r(t.textures),l=r(t.images),c=r(t.shapes),u=r(t.skeletons),d=r(t.animations),m=r(t.nodes);h.length>0&&(e.geometries=h),a.length>0&&(e.materials=a),o.length>0&&(e.textures=o),l.length>0&&(e.images=l),c.length>0&&(e.shapes=c),u.length>0&&(e.skeletons=u),d.length>0&&(e.animations=d),m.length>0&&(e.nodes=m)}return e.object=s,e;function r(h){const a=[];for(const o in h){const l=h[o];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),i===!0)for(let e=0;e<t.children.length;e++){const s=t.children[e];this.add(s.clone())}return this}}$.DefaultUp=new y(0,1,0),$.DefaultMatrixAutoUpdate=!0;const H=new y,J=new y,ki=new y,Q=new y,zt=new y,St=new y,xe=new y,Ti=new y,Ri=new y,Ii=new y;class K{constructor(t=new y,i=new y,e=new y){this.a=t,this.b=i,this.c=e}static getNormal(t,i,e,s){s.subVectors(e,i),H.subVectors(t,i),s.cross(H);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,i,e,s,n){H.subVectors(s,i),J.subVectors(e,i),ki.subVectors(t,i);const r=H.dot(H),h=H.dot(J),a=H.dot(ki),o=J.dot(J),l=J.dot(ki),c=r*o-h*h;if(c===0)return n.set(-2,-1,-1);const u=1/c,d=(o*a-h*l)*u,m=(r*l-h*a)*u;return n.set(1-d-m,m,d)}static containsPoint(t,i,e,s){return this.getBarycoord(t,i,e,s,Q),Q.x>=0&&Q.y>=0&&Q.x+Q.y<=1}static getUV(t,i,e,s,n,r,h,a){return this.getBarycoord(t,i,e,s,Q),a.set(0,0),a.addScaledVector(n,Q.x),a.addScaledVector(r,Q.y),a.addScaledVector(h,Q.z),a}static isFrontFacing(t,i,e,s){return H.subVectors(e,i),J.subVectors(t,i),H.cross(J).dot(s)<0}set(t,i,e){return this.a.copy(t),this.b.copy(i),this.c.copy(e),this}setFromPointsAndIndices(t,i,e,s){return this.a.copy(t[i]),this.b.copy(t[e]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,i,e,s){return this.a.fromBufferAttribute(t,i),this.b.fromBufferAttribute(t,e),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return H.subVectors(this.c,this.b),J.subVectors(this.a,this.b),H.cross(J).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return K.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,i){return K.getBarycoord(t,this.a,this.b,this.c,i)}getUV(t,i,e,s,n){return K.getUV(t,this.a,this.b,this.c,i,e,s,n)}containsPoint(t){return K.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return K.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,i){const e=this.a,s=this.b,n=this.c;let r,h;zt.subVectors(s,e),St.subVectors(n,e),Ti.subVectors(t,e);const a=zt.dot(Ti),o=St.dot(Ti);if(a<=0&&o<=0)return i.copy(e);Ri.subVectors(t,s);const l=zt.dot(Ri),c=St.dot(Ri);if(l>=0&&c<=l)return i.copy(s);const u=a*c-l*o;if(u<=0&&a>=0&&l<=0)return r=a/(a-l),i.copy(e).addScaledVector(zt,r);Ii.subVectors(t,n);const d=zt.dot(Ii),m=St.dot(Ii);if(m>=0&&d<=m)return i.copy(n);const p=d*o-a*m;if(p<=0&&o>=0&&m<=0)return h=o/(o-m),i.copy(e).addScaledVector(St,h);const g=l*m-d*c;if(g<=0&&c-l>=0&&d-m>=0)return xe.subVectors(n,s),h=(c-l)/(c-l+(d-m)),i.copy(s).addScaledVector(xe,h);const x=1/(g+p+u);return r=p*x,h=u*x,i.copy(e).addScaledVector(zt,r).addScaledVector(St,h)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ls=0;class cs extends Pt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ls++}),this.uuid=Et(),this.name="",this.type="Material",this.blending=Ji,this.side=$i,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ve,this.blendDst=qe,this.blendEquation=je,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Le,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=$e,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=pi,this.stencilZFail=pi,this.stencilZPass=pi,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const i in t){const e=t[i];if(e===void 0){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}if(i==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===We;continue}const s=this[i];if(s===void 0){console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.");continue}s&&s.isColor?s.set(e):s&&s.isVector3&&e&&e.isVector3?s.copy(e):this[i]=e}}toJSON(t){const i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{}});const e={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(t).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(t).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==Ji&&(e.blending=this.blending),this.side!==$i&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(e.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=this.flatShading),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),JSON.stringify(this.userData)!=="{}"&&(e.userData=this.userData);function s(n){const r=[];for(const h in n){const a=n[h];delete a.metadata,r.push(a)}return r}if(i){const n=s(t.textures),r=s(t.images);n.length>0&&(e.textures=n),r.length>0&&(e.images=r)}return e}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let e=null;if(i!==null){const s=i.length;e=new Array(s);for(let n=0;n!==s;++n)e[n]=i[n].clone()}return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ge extends cs{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Mi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ue,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const F=new y,Gt=new O;class nt{constructor(t,i,e){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=i,this.count=t!==void 0?t.length/i:0,this.normalized=e===!0,this.usage=ie,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,i,e){t*=this.itemSize,e*=i.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=i.array[e+s];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const i=this.array;let e=0;for(let s=0,n=t.length;s<n;s++){let r=t[s];r===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",s),r=new Mi),i[e++]=r.r,i[e++]=r.g,i[e++]=r.b}return this}copyVector2sArray(t){const i=this.array;let e=0;for(let s=0,n=t.length;s<n;s++){let r=t[s];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",s),r=new O),i[e++]=r.x,i[e++]=r.y}return this}copyVector3sArray(t){const i=this.array;let e=0;for(let s=0,n=t.length;s<n;s++){let r=t[s];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",s),r=new y),i[e++]=r.x,i[e++]=r.y,i[e++]=r.z}return this}copyVector4sArray(t){const i=this.array;let e=0;for(let s=0,n=t.length;s<n;s++){let r=t[s];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",s),r=new _i),i[e++]=r.x,i[e++]=r.y,i[e++]=r.z,i[e++]=r.w}return this}applyMatrix3(t){if(this.itemSize===2)for(let i=0,e=this.count;i<e;i++)Gt.fromBufferAttribute(this,i),Gt.applyMatrix3(t),this.setXY(i,Gt.x,Gt.y);else if(this.itemSize===3)for(let i=0,e=this.count;i<e;i++)F.fromBufferAttribute(this,i),F.applyMatrix3(t),this.setXYZ(i,F.x,F.y,F.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)F.fromBufferAttribute(this,i),F.applyMatrix4(t),this.setXYZ(i,F.x,F.y,F.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)F.fromBufferAttribute(this,i),F.applyNormalMatrix(t),this.setXYZ(i,F.x,F.y,F.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)F.fromBufferAttribute(this,i),F.transformDirection(t),this.setXYZ(i,F.x,F.y,F.z);return this}set(t,i=0){return this.array.set(t,i),this}getX(t){return this.array[t*this.itemSize]}setX(t,i){return this.array[t*this.itemSize]=i,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,i){return this.array[t*this.itemSize+1]=i,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,i){return this.array[t*this.itemSize+2]=i,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,i){return this.array[t*this.itemSize+3]=i,this}setXY(t,i,e){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=e,this}setXYZ(t,i,e,s){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this}setXYZW(t,i,e,s,n){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ie&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}class us extends nt{constructor(t,i,e){super(new Uint16Array(t),i,e)}}class ds extends nt{constructor(t,i,e){super(new Uint32Array(t),i,e)}}class fs extends nt{constructor(t,i,e){super(new Float32Array(t),i,e)}}let ms=0;const j=new v,Oi=new $,At=new y,W=new Tt,vt=new Tt,C=new y;class $t extends Pt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ms++}),this.uuid=Et(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Qe(t)?ds:us)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,i){return this.attributes[t]=i,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,i,e=0){this.groups.push({start:t,count:i,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}applyMatrix4(t){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(t),i.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new Ct().getNormalMatrix(t);e.applyNormalMatrix(n),e.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return j.makeRotationFromQuaternion(t),this.applyMatrix4(j),this}rotateX(t){return j.makeRotationX(t),this.applyMatrix4(j),this}rotateY(t){return j.makeRotationY(t),this.applyMatrix4(j),this}rotateZ(t){return j.makeRotationZ(t),this.applyMatrix4(j),this}translate(t,i,e){return j.makeTranslation(t,i,e),this.applyMatrix4(j),this}scale(t,i,e){return j.makeScale(t,i,e),this.applyMatrix4(j),this}lookAt(t){return Oi.lookAt(t),Oi.updateMatrix(),this.applyMatrix4(Oi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(At).negate(),this.translate(At.x,At.y,At.z),this}setFromPoints(t){const i=[];for(let e=0,s=t.length;e<s;e++){const n=t[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new fs(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Tt);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new y(-1/0,-1/0,-1/0),new y(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),i)for(let e=0,s=i.length;e<s;e++){const n=i[e];W.setFromBufferAttribute(n),this.morphTargetsRelative?(C.addVectors(this.boundingBox.min,W.min),this.boundingBox.expandByPoint(C),C.addVectors(this.boundingBox.max,W.max),this.boundingBox.expandByPoint(C)):(this.boundingBox.expandByPoint(W.min),this.boundingBox.expandByPoint(W.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ae);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new y,1/0);return}if(t){const e=this.boundingSphere.center;if(W.setFromBufferAttribute(t),i)for(let n=0,r=i.length;n<r;n++){const h=i[n];vt.setFromBufferAttribute(h),this.morphTargetsRelative?(C.addVectors(W.min,vt.min),W.expandByPoint(C),C.addVectors(W.max,vt.max),W.expandByPoint(C)):(W.expandByPoint(vt.min),W.expandByPoint(vt.max))}W.getCenter(e);let s=0;for(let n=0,r=t.count;n<r;n++)C.fromBufferAttribute(t,n),s=Math.max(s,e.distanceToSquared(C));if(i)for(let n=0,r=i.length;n<r;n++){const h=i[n],a=this.morphTargetsRelative;for(let o=0,l=h.count;o<l;o++)C.fromBufferAttribute(h,o),a&&(At.fromBufferAttribute(t,o),C.add(At)),s=Math.max(s,e.distanceToSquared(C))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,i=this.attributes;if(t===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.array,s=i.position.array,n=i.normal.array,r=i.uv.array,h=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new nt(new Float32Array(4*h),4));const a=this.getAttribute("tangent").array,o=[],l=[];for(let S=0;S<h;S++)o[S]=new y,l[S]=new y;const c=new y,u=new y,d=new y,m=new O,p=new O,g=new O,x=new y,w=new y;function z(S,B,T){c.fromArray(s,S*3),u.fromArray(s,B*3),d.fromArray(s,T*3),m.fromArray(r,S*2),p.fromArray(r,B*2),g.fromArray(r,T*2),u.sub(c),d.sub(c),p.sub(m),g.sub(m);const R=1/(p.x*g.y-g.x*p.y);!isFinite(R)||(x.copy(u).multiplyScalar(g.y).addScaledVector(d,-p.y).multiplyScalar(R),w.copy(d).multiplyScalar(p.x).addScaledVector(u,-g.x).multiplyScalar(R),o[S].add(x),o[B].add(x),o[T].add(x),l[S].add(w),l[B].add(w),l[T].add(w))}let _=this.groups;_.length===0&&(_=[{start:0,count:e.length}]);for(let S=0,B=_.length;S<B;++S){const T=_[S],R=T.start,ot=T.count;for(let I=R,lt=R+ot;I<lt;I+=3)z(e[I+0],e[I+1],e[I+2])}const b=new y,A=new y,M=new y,D=new y;function V(S){M.fromArray(n,S*3),D.copy(M);const B=o[S];b.copy(B),b.sub(M.multiplyScalar(M.dot(B))).normalize(),A.crossVectors(D,B);const R=A.dot(l[S])<0?-1:1;a[S*4]=b.x,a[S*4+1]=b.y,a[S*4+2]=b.z,a[S*4+3]=R}for(let S=0,B=_.length;S<B;++S){const T=_[S],R=T.start,ot=T.count;for(let I=R,lt=R+ot;I<lt;I+=3)V(e[I+0]),V(e[I+1]),V(e[I+2])}}computeVertexNormals(){const t=this.index,i=this.getAttribute("position");if(i!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new nt(new Float32Array(i.count*3),3),this.setAttribute("normal",e);else for(let u=0,d=e.count;u<d;u++)e.setXYZ(u,0,0,0);const s=new y,n=new y,r=new y,h=new y,a=new y,o=new y,l=new y,c=new y;if(t)for(let u=0,d=t.count;u<d;u+=3){const m=t.getX(u+0),p=t.getX(u+1),g=t.getX(u+2);s.fromBufferAttribute(i,m),n.fromBufferAttribute(i,p),r.fromBufferAttribute(i,g),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),h.fromBufferAttribute(e,m),a.fromBufferAttribute(e,p),o.fromBufferAttribute(e,g),h.add(l),a.add(l),o.add(l),e.setXYZ(m,h.x,h.y,h.z),e.setXYZ(p,a.x,a.y,a.z),e.setXYZ(g,o.x,o.y,o.z)}else for(let u=0,d=i.count;u<d;u+=3)s.fromBufferAttribute(i,u+0),n.fromBufferAttribute(i,u+1),r.fromBufferAttribute(i,u+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),e.setXYZ(u+0,l.x,l.y,l.z),e.setXYZ(u+1,l.x,l.y,l.z),e.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(t,i){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}i===void 0&&(i=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const e=this.attributes;for(const s in e){if(t.attributes[s]===void 0)continue;const r=e[s].array,h=t.attributes[s],a=h.array,o=h.itemSize*i,l=Math.min(a.length,r.length-o);for(let c=0,u=o;c<l;c++,u++)r[u]=a[c]}return this}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)C.fromBufferAttribute(t,i),C.normalize(),t.setXYZ(i,C.x,C.y,C.z)}toNonIndexed(){function t(h,a){const o=h.array,l=h.itemSize,c=h.normalized,u=new o.constructor(a.length*l);let d=0,m=0;for(let p=0,g=a.length;p<g;p++){h.isInterleavedBufferAttribute?d=a[p]*h.data.stride+h.offset:d=a[p]*l;for(let x=0;x<l;x++)u[m++]=o[d++]}return new nt(u,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new $t,e=this.index.array,s=this.attributes;for(const h in s){const a=s[h],o=t(a,e);i.setAttribute(h,o)}const n=this.morphAttributes;for(const h in n){const a=[],o=n[h];for(let l=0,c=o.length;l<c;l++){const u=o[l],d=t(u,e);a.push(d)}i.morphAttributes[h]=a}i.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let h=0,a=r.length;h<a;h++){const o=r[h];i.addGroup(o.start,o.count,o.materialIndex)}return i}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const o in a)a[o]!==void 0&&(t[o]=a[o]);return t}t.data={attributes:{}};const i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const e=this.attributes;for(const a in e){const o=e[a];t.data.attributes[a]=o.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const o=this.morphAttributes[a],l=[];for(let c=0,u=o.length;c<u;c++){const d=o[c];l.push(d.toJSON(t.data))}l.length>0&&(s[a]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const h=this.boundingSphere;return h!==null&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const e=t.index;e!==null&&this.setIndex(e.clone(i));const s=t.attributes;for(const o in s){const l=s[o];this.setAttribute(o,l.clone(i))}const n=t.morphAttributes;for(const o in n){const l=[],c=n[o];for(let u=0,d=c.length;u<d;u++)l.push(c[u].clone(i));this.morphAttributes[o]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let o=0,l=r.length;o<l;o++){const c=r[o];this.addGroup(c.start,c.count,c.materialIndex)}const h=t.boundingBox;h!==null&&(this.boundingBox=h.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const be=new v,Ft=new oe,vi=new ae,rt=new y,ht=new y,at=new y,Di=new y,Ni=new y,Pi=new y,Jt=new y,Qt=new y,Kt=new y,ti=new O,ii=new O,ei=new O,Wi=new y,si=new y;class ps extends ${constructor(t=new $t,i=new ge){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=i,this.updateMorphTargets()}copy(t,i){return super.copy(t,i),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const i=this.geometry.morphAttributes,e=Object.keys(i);if(e.length>0){const s=i[e[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const h=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[h]=n}}}}raycast(t,i){const e=this.geometry,s=this.material,n=this.matrixWorld;if(s===void 0||(e.boundingSphere===null&&e.computeBoundingSphere(),vi.copy(e.boundingSphere),vi.applyMatrix4(n),t.ray.intersectsSphere(vi)===!1)||(be.copy(n).invert(),Ft.copy(t.ray).applyMatrix4(be),e.boundingBox!==null&&Ft.intersectsBox(e.boundingBox)===!1))return;let r;const h=e.index,a=e.attributes.position,o=e.morphAttributes.position,l=e.morphTargetsRelative,c=e.attributes.uv,u=e.attributes.uv2,d=e.groups,m=e.drawRange;if(h!==null)if(Array.isArray(s))for(let p=0,g=d.length;p<g;p++){const x=d[p],w=s[x.materialIndex],z=Math.max(x.start,m.start),_=Math.min(h.count,Math.min(x.start+x.count,m.start+m.count));for(let b=z,A=_;b<A;b+=3){const M=h.getX(b),D=h.getX(b+1),V=h.getX(b+2);r=ni(this,w,t,Ft,a,o,l,c,u,M,D,V),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=x.materialIndex,i.push(r))}}else{const p=Math.max(0,m.start),g=Math.min(h.count,m.start+m.count);for(let x=p,w=g;x<w;x+=3){const z=h.getX(x),_=h.getX(x+1),b=h.getX(x+2);r=ni(this,s,t,Ft,a,o,l,c,u,z,_,b),r&&(r.faceIndex=Math.floor(x/3),i.push(r))}}else if(a!==void 0)if(Array.isArray(s))for(let p=0,g=d.length;p<g;p++){const x=d[p],w=s[x.materialIndex],z=Math.max(x.start,m.start),_=Math.min(a.count,Math.min(x.start+x.count,m.start+m.count));for(let b=z,A=_;b<A;b+=3){const M=b,D=b+1,V=b+2;r=ni(this,w,t,Ft,a,o,l,c,u,M,D,V),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=x.materialIndex,i.push(r))}}else{const p=Math.max(0,m.start),g=Math.min(a.count,m.start+m.count);for(let x=p,w=g;x<w;x+=3){const z=x,_=x+1,b=x+2;r=ni(this,s,t,Ft,a,o,l,c,u,z,_,b),r&&(r.faceIndex=Math.floor(x/3),i.push(r))}}}}function ys(f,t,i,e,s,n,r,h){let a;if(t.side===Ne?a=e.intersectTriangle(r,n,s,!0,h):a=e.intersectTriangle(s,n,r,t.side!==Pe,h),a===null)return null;si.copy(h),si.applyMatrix4(f.matrixWorld);const o=i.ray.origin.distanceTo(si);return o<i.near||o>i.far?null:{distance:o,point:si.clone(),object:f}}function ni(f,t,i,e,s,n,r,h,a,o,l,c){rt.fromBufferAttribute(s,o),ht.fromBufferAttribute(s,l),at.fromBufferAttribute(s,c);const u=f.morphTargetInfluences;if(n&&u){Jt.set(0,0,0),Qt.set(0,0,0),Kt.set(0,0,0);for(let m=0,p=n.length;m<p;m++){const g=u[m],x=n[m];g!==0&&(Di.fromBufferAttribute(x,o),Ni.fromBufferAttribute(x,l),Pi.fromBufferAttribute(x,c),r?(Jt.addScaledVector(Di,g),Qt.addScaledVector(Ni,g),Kt.addScaledVector(Pi,g)):(Jt.addScaledVector(Di.sub(rt),g),Qt.addScaledVector(Ni.sub(ht),g),Kt.addScaledVector(Pi.sub(at),g)))}rt.add(Jt),ht.add(Qt),at.add(Kt)}f.isSkinnedMesh&&(f.boneTransform(o,rt),f.boneTransform(l,ht),f.boneTransform(c,at));const d=ys(f,t,i,e,rt,ht,at,Wi);if(d){h&&(ti.fromBufferAttribute(h,o),ii.fromBufferAttribute(h,l),ei.fromBufferAttribute(h,c),d.uv=K.getUV(Wi,rt,ht,at,ti,ii,ei,new O)),a&&(ti.fromBufferAttribute(a,o),ii.fromBufferAttribute(a,l),ei.fromBufferAttribute(a,c),d.uv2=K.getUV(Wi,rt,ht,at,ti,ii,ei,new O));const m={a:o,b:l,c,normal:new y,materialIndex:0};K.getNormal(rt,ht,at,m.normal),d.face=m}return d}class Me extends ${constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new v,this.projectionMatrix=new v,this.projectionMatrixInverse=new v}copy(t,i){return super.copy(t,i),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(-i[8],-i[9],-i[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,i){super.updateWorldMatrix(t,i),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class xs extends Me{constructor(t=50,i=1,e=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=e,this.far=s,this.focus=10,this.aspect=i,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,i){return super.copy(t,i),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const i=.5*this.getFilmHeight()/t;this.fov=ee*2*Math.atan(i),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(yi*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return ee*2*Math.atan(Math.tan(yi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,i,e,s,n,r){this.aspect=t/i,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=i,this.view.offsetX=e,this.view.offsetY=s,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let i=t*Math.tan(yi*.5*this.fov)/this.zoom,e=2*i,s=this.aspect*e,n=-.5*s;const r=this.view;if(this.view!==null&&this.view.enabled){const a=r.fullWidth,o=r.fullHeight;n+=r.offsetX*s/a,i-=r.offsetY*e/o,s*=r.width/a,e*=r.height/o}const h=this.filmOffset;h!==0&&(n+=t*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+s,i,i-e,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const i=super.toJSON(t);return i.object.fov=this.fov,i.object.zoom=this.zoom,i.object.near=this.near,i.object.far=this.far,i.object.focus=this.focus,i.object.aspect=this.aspect,this.view!==null&&(i.object.view=Object.assign({},this.view)),i.object.filmGauge=this.filmGauge,i.object.filmOffset=this.filmOffset,i}}class gs extends Me{constructor(t=-1,i=1,e=1,s=-1,n=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=i,this.top=e,this.bottom=s,this.near=n,this.far=r,this.updateProjectionMatrix()}copy(t,i){return super.copy(t,i),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,i,e,s,n,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=i,this.view.offsetX=e,this.view.offsetY=s,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),i=(this.top-this.bottom)/(2*this.zoom),e=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let n=e-t,r=e+t,h=s+i,a=s-i;if(this.view!==null&&this.view.enabled){const o=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=o*this.view.offsetX,r=n+o*this.view.width,h-=l*this.view.offsetY,a=h-l*this.view.height}this.projectionMatrix.makeOrthographic(n,r,h,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const i=super.toJSON(t);return i.object.zoom=this.zoom,i.object.left=this.left,i.object.right=this.right,i.object.top=this.top,i.object.bottom=this.bottom,i.object.near=this.near,i.object.far=this.far,this.view!==null&&(i.object.view=Object.assign({},this.view)),i}}class bs{constructor(t,i,e=0,s=1/0){this.ray=new oe(t,i),this.near=e,this.far=s,this.camera=null,this.layers=new ue,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,i){this.ray.set(t,i)}setFromCamera(t,i){i.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(i.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(i).sub(this.ray.origin).normalize(),this.camera=i):i.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(i.near+i.far)/(i.near-i.far)).unproject(i),this.ray.direction.set(0,0,-1).transformDirection(i.matrixWorld),this.camera=i):console.error("THREE.Raycaster: Unsupported camera type: "+i.type)}intersectObject(t,i=!0,e=[]){return ji(t,this,e,i),e.sort(we),e}intersectObjects(t,i=!0,e=[]){for(let s=0,n=t.length;s<n;s++)ji(t[s],this,e,i);return e.sort(we),e}}function we(f,t){return f.distance-t.distance}function ji(f,t,i,e){if(f.layers.test(t.layers)&&f.raycast(t,i),e===!0){const s=f.children;for(let n=0,r=s.length;n<r;n++)ji(s[n],t,i,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Gi}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Gi);class Ms{constructor(t,i=1,e="DATA"){this.__name=t,this.__version=i,this.__storeName=e,this.__logEnabled=!1}enableLog(){this.__logEnabled=!0}__logStart(t){this.__logEnabled&&console.time(`ModelStoreLog_${this.__name}_${this.__storeName}_${t}`)}__logEnd(t){this.__logEnabled&&console.timeEnd(`ModelStoreLog_${this.__name}_${this.__storeName}_${t}`)}close(){return new Promise(t=>{this.__db&&(this.__db.close(),t(!0))})}__open(){return new Promise((t,i)=>{if(this.__db)t(this.__db);else{const e=indexedDB.open(this.__name,this.__version);e.onupgradeneeded=()=>{const s=e.result;s.objectStoreNames.contains(this.__name)||s.createObjectStore(this.__storeName)},e.onblocked=s=>{this.__logEnd("getKey"),i({type:"onblocked",event:s})},e.onerror=s=>{this.__logEnd("getKey"),i({type:"onblocked",event:s})},e.onsuccess=()=>{this.__db=e.result,t(e.result)}}})}getUUID(){return crypto.randomUUID()}getKey(t){return new Promise(async(i,e)=>{this.__logStart("getKey");try{const n=(await this.__open()).transaction(this.__storeName);n.onerror=a=>{this.__logEnd("getKey"),e({type:"store tx error",event:a})};const h=n.objectStore(this.__storeName).get(t);h.onsuccess=()=>{this.__logEnd("getKey"),i(h.result)}}catch(s){this.__logEnd("getKey"),e(s)}})}setKey(t,i){return new Promise(async(e,s)=>{var n;this.__logStart("setKey");try{const h=(await this.__open()).transaction(this.__storeName,"readwrite");h.onerror=l=>{this.__logEnd("setKey"),s({type:"store tx error",event:l})};const o=h.objectStore(this.__storeName).put(i,t);o.onsuccess=()=>{this.__logEnd("setKey"),e(o.result)},(n=o.transaction)==null||n.commit()}catch(r){this.__logEnd("setKey"),s(r)}})}getAllKeys(){return new Promise(async(t,i)=>{this.__logStart("getAllKeys");try{const s=(await this.__open()).transaction(this.__storeName,"readwrite");s.onerror=h=>{this.__logEnd("getAllKeys"),i({type:"store tx error",event:h})};const r=s.objectStore(this.__storeName).getAllKeys();r.onsuccess=()=>{this.__logEnd("getAllKeys"),t(r.result)}}catch(e){this.__logEnd("getAllKeys"),i(e)}})}deleteKey(t){return new Promise(async(i,e)=>{this.__logStart("deleteKey");try{const n=(await this.__open()).transaction(this.__storeName,"readwrite");n.onerror=a=>{this.__logEnd("deleteKey"),e({type:"store tx error",event:a})};const h=n.objectStore(this.__storeName).delete(t);h.onsuccess=()=>{this.__logEnd("deleteKey"),i(h.result)}}catch(s){this.__logEnd("deleteKey"),e(s)}})}deleteDB(){return new Promise((t,i)=>{this.__logStart("deleteDB");const e=indexedDB.deleteDatabase(this.__name);e.onsuccess=()=>{this.__logEnd("deleteDB"),t(!0)},e.onerror=s=>{this.__logEnd("deleteDB"),i({type:"onblocked",event:s})}})}}$.DefaultUp=new y(0,0,1);let _e,ze,Se,Ae,Fe,Vi;const qi=[],ri=[];class ws{constructor(){this.__raycaster=new bs}async raycast(t,i,e,s,n,r){if(_e===t.x&&ze===t.y&&e===Se&&s===Ae&&n===Fe&&r!==!0)return Vi;_e=t.x,ze=t.y,Se=e,Ae=s,Fe=n;let h=null;const a=ri.indexOf(`${e}${s}${n}`);a!==-1&&(h=qi[a]);let o;if(i.object.type==="PerspectiveCamera"?(o=new xs(i.object.fov,i.object.aspect,i.object.near,i.object.far),i.object.focus!==void 0&&(o.focus=i.object.focus),i.object.filmGauge!==void 0&&(o.filmGauge=i.object.filmGauge),i.object.filmOffset!==void 0&&(o.filmOffset=i.object.filmOffset)):o=new gs(i.object.left,i.object.right,i.object.top,i.object.bottom,i.object.near,i.object.far),i.object.zoom!==void 0&&(o.zoom=i.object.zoom),i.object.view!==void 0&&(o.view=Object.assign({},i.object.view)),o.matrix.fromArray(i.object.matrix),i.object.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=i.object.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale),o.updateMatrixWorld(!0),o.updateProjectionMatrix(),this.__raycaster.setFromCamera(t,o),!h){const u=new Ms(e),d=await u.getKey(s),m=await u.getKey(n),p=new $t;p.setIndex(new nt(new Uint32Array(d),1)),p.setAttribute("position",new nt(new Float32Array(m),3,!1)),p.computeBoundingBox(),h=new ps(p,new ge),r||(qi.push(h),ri.push(`${e}${s}${n}`),ri.length>15&&(ri.shift(),qi.shift()))}const l=this.__raycaster.intersectObjects([h]),c=h.geometry.attributes.position.array;return Vi=l.map(u=>{var g,x,w;const d=((g=u.face)==null?void 0:g.a)||0,m=((x=u.face)==null?void 0:x.b)||0,p=((w=u.face)==null?void 0:w.c)||0;return{distance:u.distance,point:{x:u.point.x,y:u.point.y,z:u.point.z},object:null,face:{a:d,b:m,c:p},facePosition:[{x:c[d],y:c[d+1],z:c[d+2]},{x:c[m],y:c[m+1],z:c[m+2]},{x:c[p],y:c[p+1],z:c[p+2]}],faceIndex:u.faceIndex}}),Vi}}di(ws)})();
