var j=Object.defineProperty;var B=(g,u,h)=>u in g?j(g,u,{enumerable:!0,configurable:!0,writable:!0,value:h}):g[u]=h;var m=(g,u,h)=>(B(g,typeof u!="symbol"?u+"":u,h),h);(function(){"use strict";const g=Symbol("Comlink.proxy"),u=Symbol("Comlink.endpoint"),h=Symbol("Comlink.releaseProxy"),p=Symbol("Comlink.thrown"),K=e=>typeof e=="object"&&e!==null||typeof e=="function",M={canHandle:e=>K(e)&&e[g],serialize(e){const{port1:t,port2:s}=new MessageChannel;return w(e,t),[s,[s]]},deserialize(e){return e.start(),T(e)}},D={canHandle:e=>K(e)&&p in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},A=new Map([["proxy",M],["throw",D]]);function w(e,t=self){t.addEventListener("message",function s(r){if(!r||!r.data)return;const{id:n,type:c,path:o}=Object.assign({path:[]},r.data),a=(r.data.argumentList||[]).map(y);let i;try{const l=o.slice(0,-1).reduce((_,b)=>_[b],e),d=o.reduce((_,b)=>_[b],e);switch(c){case"GET":i=d;break;case"SET":l[o.slice(-1)[0]]=y(r.data.value),i=!0;break;case"APPLY":i=d.apply(l,a);break;case"CONSTRUCT":{const _=new d(...a);i=O(_)}break;case"ENDPOINT":{const{port1:_,port2:b}=new MessageChannel;w(e,b),i=L(_,[_])}break;case"RELEASE":i=void 0;break;default:return}}catch(l){i={value:l,[p]:0}}Promise.resolve(i).catch(l=>({value:l,[p]:0})).then(l=>{const[d,_]=x(l);t.postMessage(Object.assign(Object.assign({},d),{id:n}),_),c==="RELEASE"&&(t.removeEventListener("message",s),P(t))})}),t.start&&t.start()}function C(e){return e.constructor.name==="MessagePort"}function P(e){C(e)&&e.close()}function T(e,t){return S(e,[],t)}function E(e){if(e)throw new Error("Proxy has been released and is not useable")}function S(e,t=[],s=function(){}){let r=!1;const n=new Proxy(s,{get(c,o){if(E(r),o===h)return()=>f(e,{type:"RELEASE",path:t.map(a=>a.toString())}).then(()=>{P(e),r=!0});if(o==="then"){if(t.length===0)return{then:()=>n};const a=f(e,{type:"GET",path:t.map(i=>i.toString())}).then(y);return a.then.bind(a)}return S(e,[...t,o])},set(c,o,a){E(r);const[i,l]=x(a);return f(e,{type:"SET",path:[...t,o].map(d=>d.toString()),value:i},l).then(y)},apply(c,o,a){E(r);const i=t[t.length-1];if(i===u)return f(e,{type:"ENDPOINT"}).then(y);if(i==="bind")return S(e,t.slice(0,-1));const[l,d]=N(a);return f(e,{type:"APPLY",path:t.map(_=>_.toString()),argumentList:l},d).then(y)},construct(c,o){E(r);const[a,i]=N(o);return f(e,{type:"CONSTRUCT",path:t.map(l=>l.toString()),argumentList:a},i).then(y)}});return n}function R(e){return Array.prototype.concat.apply([],e)}function N(e){const t=e.map(x);return[t.map(s=>s[0]),R(t.map(s=>s[1]))]}const k=new WeakMap;function L(e,t){return k.set(e,t),e}function O(e){return Object.assign(e,{[g]:!0})}function x(e){for(const[t,s]of A)if(s.canHandle(e)){const[r,n]=s.serialize(e);return[{type:"HANDLER",name:t,value:r},n]}return[{type:"RAW",value:e},k.get(e)||[]]}function y(e){switch(e.type){case"HANDLER":return A.get(e.name).deserialize(e.value);case"RAW":return e.value}}function f(e,t,s){return new Promise(r=>{const n=I();e.addEventListener("message",function c(o){!o.data||!o.data.id||o.data.id!==n||(e.removeEventListener("message",c),r(o.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:n},t),s)})}function I(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}class U{constructor(t,s=1,r="DATA"){m(this,"__name");m(this,"__version");m(this,"__storeName");m(this,"__logEnabled");m(this,"__db");this.__name=t,this.__version=s,this.__storeName=r,this.__logEnabled=!1}enableLog(){this.__logEnabled=!0}__logStart(t){this.__logEnabled&&console.time(`ModelStoreLog_${this.__name}_${this.__storeName}_${t}`)}__logEnd(t){this.__logEnabled&&console.timeEnd(`ModelStoreLog_${this.__name}_${this.__storeName}_${t}`)}close(){return new Promise(t=>{this.__db&&(this.__db.close(),t(!0))})}__open(){return new Promise((t,s)=>{if(this.__db)t(this.__db);else{const r=indexedDB.open(this.__name,this.__version);r.onupgradeneeded=()=>{const n=r.result;n.objectStoreNames.contains(this.__name)||n.createObjectStore(this.__storeName)},r.onblocked=n=>{this.__logEnd("getKey"),s({type:"onblocked",event:n})},r.onerror=n=>{this.__logEnd("getKey"),s({type:"onblocked",event:n})},r.onsuccess=()=>{this.__db=r.result,t(r.result)}}})}getUUID(){return crypto.randomUUID()}getKey(t){return new Promise(async(s,r)=>{this.__logStart("getKey");try{const c=(await this.__open()).transaction(this.__storeName);c.onerror=i=>{this.__logEnd("getKey"),r({type:"store tx error",event:i})};const a=c.objectStore(this.__storeName).get(t);a.onsuccess=()=>{this.__logEnd("getKey"),s(a.result)}}catch(n){this.__logEnd("getKey"),r(n)}})}setKey(t,s){return new Promise(async(r,n)=>{var c;this.__logStart("setKey");try{const a=(await this.__open()).transaction(this.__storeName,"readwrite");a.onerror=d=>{this.__logEnd("setKey"),n({type:"store tx error",event:d})};const l=a.objectStore(this.__storeName).put(s,t);l.onsuccess=()=>{this.__logEnd("setKey"),r(l.result)},(c=l.transaction)==null||c.commit()}catch(o){this.__logEnd("setKey"),n(o)}})}getAllKeys(){return new Promise(async(t,s)=>{this.__logStart("getAllKeys");try{const n=(await this.__open()).transaction(this.__storeName,"readwrite");n.onerror=a=>{this.__logEnd("getAllKeys"),s({type:"store tx error",event:a})};const o=n.objectStore(this.__storeName).getAllKeys();o.onsuccess=()=>{this.__logEnd("getAllKeys"),t(o.result)}}catch(r){this.__logEnd("getAllKeys"),s(r)}})}deleteKey(t){return new Promise(async(s,r)=>{this.__logStart("deleteKey");try{const c=(await this.__open()).transaction(this.__storeName,"readwrite");c.onerror=i=>{this.__logEnd("deleteKey"),r({type:"store tx error",event:i})};const a=c.objectStore(this.__storeName).delete(t);a.onsuccess=()=>{this.__logEnd("deleteKey"),s(a.result)}}catch(n){this.__logEnd("deleteKey"),r(n)}})}deleteDB(){return new Promise((t,s)=>{this.__logStart("deleteDB");const r=indexedDB.deleteDatabase(this.__name);r.onsuccess=()=>{this.__logEnd("deleteDB"),t(!0)},r.onerror=n=>{this.__logEnd("deleteDB"),s({type:"onblocked",event:n})}})}}class H{constructor(t){m(this,"__modelStorage");this.__modelStorage=new U(t)}async getIds(t){return await this.__modelStorage.getKey(t)}async getModel(t){const s=this.__modelStorage,r=await this.__modelStorage.getKey(t);if(!r)return null;const n=[];return r.indexID=r.index,r.index=new Uint32Array(await s.getKey(r.index)),n.push(r.index.buffer),r.positionID=r.position,r.position=new Float32Array(await s.getKey(r.position)),n.push(r.position.buffer),r.vertexColor&&(r.vertexColor=new Float32Array(await await s.getKey(r.vertexColor)),n.push(r.vertexColor.buffer)),L(r,n)}}w(H)})();
